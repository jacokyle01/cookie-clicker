{"version":3,"sources":["interfaces.ts","ctrl.ts","../src/htmldomapi.ts","../src/vnode.ts","../src/is.ts","../src/init.ts","../src/h.ts","../src/thunk.ts","../../src/helpers/attachto.ts","../src/tovnode.ts","../../src/modules/attributes.ts","../../src/modules/class.ts","../../src/modules/dataset.ts","../../src/modules/eventlisteners.ts","../../src/modules/props.ts","../../src/modules/style.ts","../src/jsx.ts","../src/index.ts","svg.ts","view.ts","main.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["export type Redraw = () => void;\n\n//TODO: refactor inventory: add Resource type? \nexport const resourceNames = [\"Cursor\", \"Baker\", \"Factory\", \"Lab\", \"Mine\", \"Shipment\"]\nexport type Inventory = {\n    count: number;\n    price: number;\n    cps: number \n    powerup: Powerup;\n} \n\nexport type Status = \"Active\" | \"Idle\" | \"Cooldown\";\n\nexport type Powerup = {\n    price: number;\n    status: Status;\n    duration: number;\n}\n","import { Redraw, resourceNames, Inventory, Powerup } from \"./interfaces\";\n\nexport default class CookieCtrl {\n\tcookieCount = 0;\n\ttps = 10;\n\telapsedTicks = 0;\n\tresources: { [key: string]: Inventory } = {};\n\n\tconstructor(readonly redraw: Redraw) {\n\t\t//TODO: move this to initialization / config class?\n\t\tresourceNames.forEach((resourceName: string, index: number) => {\n\t\t\tlet pwrup: Powerup = {\n\t\t\t\tprice: Math.pow(index + 1, 4) * 100,\n\t\t\t\tstatus: \"Idle\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\n\t\t\tlet inventory = {\n\t\t\t\tcount: 0,\n\t\t\t\tprice: Math.pow(index + 1, 5) * 15 + 10,\n\t\t\t\tcps: index * index * index * 10 + 10,\n\t\t\t\tpowerup: pwrup,\n\t\t\t};\n\t\t\tthis.resources[resourceName] = inventory;\n\t\t});\n\t}\n\n\tclickCookie = (): void => {\n\t\tthis.cookieCount++;\n\t\tthis.redraw();\n\t};\n\n\tcanAfford = (resource: string): boolean => {\n\t\treturn this.resources[resource].price < this.cookieCount;\n\t};\n\n\tcanAffordPowerup = (resource: string): boolean => {\n\t\treturn this.resources[resource].powerup.price < this.cookieCount;\n\t};\n\n\traisePrice = (resource: string): void => {\n\t\tlet price = this.resources[resource].price;\n\t\tprice *= 1.15;\n\t\tthis.resources[resource].price = Math.floor(price);\n\t};\n\n\tbuyResource = (resource: string): void => {\n\t\tif (!this.canAfford(resource)) return;\n\t\tthis.cookieCount -= this.resources[resource].price;\n\t\tthis.resources[resource].count++;\n\t\tthis.raisePrice(resource);\n\t\tthis.redraw();\n\t};\n\n\tbuyPowerup = (resource: string): void => {\n\t\tconst powerup = this.resources[resource].powerup;\n\t\tif (!this.canAffordPowerup(resource) || powerup.status != \"Idle\") return;\n\t\tthis.cookieCount -= this.resources[resource].powerup.price;\n\t\tthis.activatePowerup(resource);\n\t\tthis.redraw();\n\t};\n\n\tactivatePowerup = (resource: string): void => {\n\t\tconst powerup = this.resources[resource].powerup;\n\t\tpowerup.status = \"Active\";\n\t\tpowerup.duration = 15;\n\t};\n\n\tcooldownPowerup = (resource: string): void => {\n\t\tconst powerup = this.resources[resource].powerup;\n\t\tpowerup.status = \"Cooldown\";\n\t\tpowerup.duration = 45;\n\t};\n\n\tcookiesPerSecond = (): number => {\n\t\tlet total = 0;\n\t\tfor (const key in this.resources) {\n\t\t\tconst entry = this.resources[key];\n\t\t\tconst powerup = entry.powerup;\n\t\t\tconst multiplier = powerup.status == \"Active\" ? 2 : 1;\n\t\t\ttotal += entry.count * entry.cps * multiplier;\n\t\t}\n\t\treturn total;\n\t\t\n\t};\n\n\tseconds = (): number => {\n\t\treturn Math.round(this.elapsedTicks / this.tps);\n\t};\n\n\tgetFormattedTime = (): string => {\n\t\tconst hours: number = Math.floor(this.seconds() / 3600);\n\t\tconst minutes = Math.floor((this.seconds() % 3600) / 60);\n\t\tconst remainingSeconds = this.seconds() % 60;\n\t\tconst formattedTime = `${String(hours).padStart(2, \"0\")}:${String(\n\t\t\tminutes\n\t\t).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\n\t\treturn formattedTime;\n\t};\n\n\t//TODO refactor powerup state change, less condition / move into separate function\n\ttick = (): void => {\n\t\tthis.elapsedTicks++;\n\t\t//a second has passed\n\t\tif (this.elapsedTicks % this.tps == 0) {\n\t\t\tfor (const key in this.resources) {\n\t\t\t\tconst entry = this.resources[key];\n\t\t\t\tconst powerup = entry.powerup;\n\t\t\t\tif (powerup.status != \"Idle\") {\n\t\t\t\t\tpowerup.duration--;\n\t\t\t\t\tif (powerup.duration == 0) {\n\t\t\t\t\t\tpowerup.status == \"Active\"\n\t\t\t\t\t\t\t? this.cooldownPowerup(key)\n\t\t\t\t\t\t\t: (powerup.status = \"Idle\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.cookieCount += this.cookiesPerSecond() / this.tps;\n\t\tthis.redraw();\n\t\tsetTimeout(this.tick, 1000 / this.tps);\n\t};\n}\n","export interface SnabbdomFragment extends DocumentFragment {\n  parent: Node | null;\n  firstChildNode: ChildNode | null;\n  lastChildNode: ChildNode | null;\n}\n\nexport interface DOMAPI {\n  createElement: (\n    tagName: any,\n    options?: ElementCreationOptions\n  ) => HTMLElement;\n  createElementNS: (\n    namespaceURI: string,\n    qualifiedName: string,\n    options?: ElementCreationOptions\n  ) => Element;\n  /**\n   * @experimental\n   * @todo Make it required when the fragment is considered stable.\n   */\n  createDocumentFragment?: () => SnabbdomFragment;\n  createTextNode: (text: string) => Text;\n  createComment: (text: string) => Comment;\n  insertBefore: (\n    parentNode: Node,\n    newNode: Node,\n    referenceNode: Node | null\n  ) => void;\n  removeChild: (node: Node, child: Node) => void;\n  appendChild: (node: Node, child: Node) => void;\n  parentNode: (node: Node) => Node | null;\n  nextSibling: (node: Node) => Node | null;\n  tagName: (elm: Element) => string;\n  setTextContent: (node: Node, text: string | null) => void;\n  getTextContent: (node: Node) => string | null;\n  isElement: (node: Node) => node is Element;\n  isText: (node: Node) => node is Text;\n  isComment: (node: Node) => node is Comment;\n  /**\n   * @experimental\n   * @todo Make it required when the fragment is considered stable.\n   */\n  isDocumentFragment?: (node: Node) => node is DocumentFragment;\n}\n\nfunction createElement(\n  tagName: any,\n  options?: ElementCreationOptions\n): HTMLElement {\n  return document.createElement(tagName, options);\n}\n\nfunction createElementNS(\n  namespaceURI: string,\n  qualifiedName: string,\n  options?: ElementCreationOptions\n): Element {\n  return document.createElementNS(namespaceURI, qualifiedName, options);\n}\n\nfunction createDocumentFragment(): SnabbdomFragment {\n  return parseFragment(document.createDocumentFragment());\n}\n\nfunction createTextNode(text: string): Text {\n  return document.createTextNode(text);\n}\n\nfunction createComment(text: string): Comment {\n  return document.createComment(text);\n}\n\nfunction insertBefore(\n  parentNode: Node,\n  newNode: Node,\n  referenceNode: Node | null\n): void {\n  if (isDocumentFragment(parentNode)) {\n    let node: Node | null = parentNode;\n    while (node && isDocumentFragment(node)) {\n      const fragment = parseFragment(node);\n      node = fragment.parent;\n    }\n    parentNode = node ?? parentNode;\n  }\n  if (isDocumentFragment(newNode)) {\n    newNode = parseFragment(newNode, parentNode);\n  }\n  if (referenceNode && isDocumentFragment(referenceNode)) {\n    referenceNode = parseFragment(referenceNode).firstChildNode;\n  }\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node: Node, child: Node): void {\n  node.removeChild(child);\n}\n\nfunction appendChild(node: Node, child: Node): void {\n  if (isDocumentFragment(child)) {\n    child = parseFragment(child, node);\n  }\n  node.appendChild(child);\n}\n\nfunction parentNode(node: Node): Node | null {\n  if (isDocumentFragment(node)) {\n    while (node && isDocumentFragment(node)) {\n      const fragment = parseFragment(node);\n      node = fragment.parent as Node;\n    }\n    return node ?? null;\n  }\n  return node.parentNode;\n}\n\nfunction nextSibling(node: Node): Node | null {\n  if (isDocumentFragment(node)) {\n    const fragment = parseFragment(node);\n    const parent = parentNode(fragment);\n    if (parent && fragment.lastChildNode) {\n      const children = Array.from(parent.childNodes);\n      const index = children.indexOf(fragment.lastChildNode);\n      return children[index + 1] ?? null;\n    }\n    return null;\n  }\n  return node.nextSibling;\n}\n\nfunction tagName(elm: Element): string {\n  return elm.tagName;\n}\n\nfunction setTextContent(node: Node, text: string | null): void {\n  node.textContent = text;\n}\n\nfunction getTextContent(node: Node): string | null {\n  return node.textContent;\n}\n\nfunction isElement(node: Node): node is Element {\n  return node.nodeType === 1;\n}\n\nfunction isText(node: Node): node is Text {\n  return node.nodeType === 3;\n}\n\nfunction isComment(node: Node): node is Comment {\n  return node.nodeType === 8;\n}\n\nfunction isDocumentFragment(node: Node): node is DocumentFragment {\n  return node.nodeType === 11;\n}\n\nfunction parseFragment(\n  fragmentNode: DocumentFragment,\n  parentNode?: Node | null\n): SnabbdomFragment {\n  const fragment = fragmentNode as SnabbdomFragment;\n  fragment.parent ??= parentNode ?? null;\n  fragment.firstChildNode ??= fragmentNode.firstChild;\n  fragment.lastChildNode ??= fragmentNode.lastChild;\n  return fragment;\n}\n\nexport const htmlDomApi: DOMAPI = {\n  createElement,\n  createElementNS,\n  createTextNode,\n  createDocumentFragment,\n  createComment,\n  insertBefore,\n  removeChild,\n  appendChild,\n  parentNode,\n  nextSibling,\n  tagName,\n  setTextContent,\n  getTextContent,\n  isElement,\n  isText,\n  isComment,\n  isDocumentFragment,\n};\n","import { Hooks } from \"./hooks\";\nimport { AttachData } from \"./helpers/attachto\";\nimport { VNodeStyle } from \"./modules/style\";\nimport { On } from \"./modules/eventlisteners\";\nimport { Attrs } from \"./modules/attributes\";\nimport { Classes } from \"./modules/class\";\nimport { Props } from \"./modules/props\";\nimport { Dataset } from \"./modules/dataset\";\n\nexport type Key = string | number | symbol;\n\nexport interface VNode {\n  sel: string | undefined;\n  data: VNodeData | undefined;\n  children: Array<VNode | string> | undefined;\n  elm: Node | undefined;\n  text: string | undefined;\n  key: Key | undefined;\n}\n\nexport interface VNodeData {\n  props?: Props;\n  attrs?: Attrs;\n  class?: Classes;\n  style?: VNodeStyle;\n  dataset?: Dataset;\n  on?: On;\n  attachData?: AttachData;\n  hook?: Hooks;\n  key?: Key;\n  ns?: string; // for SVGs\n  fn?: () => VNode; // for thunks\n  args?: any[]; // for thunks\n  is?: string; // for custom elements v1\n  [key: string]: any; // for any other 3rd party module\n}\n\nexport function vnode(\n  sel: string | undefined,\n  data: any | undefined,\n  children: Array<VNode | string> | undefined,\n  text: string | undefined,\n  elm: Element | DocumentFragment | Text | undefined\n): VNode {\n  const key = data === undefined ? undefined : data.key;\n  return { sel, data, children, text, elm, key };\n}\n","export const array = Array.isArray;\nexport function primitive(s: any): s is string | number {\n  return (\n    typeof s === \"string\" ||\n    typeof s === \"number\" ||\n    s instanceof String ||\n    s instanceof Number\n  );\n}\n","import { Module } from \"./modules/module\";\nimport { vnode, VNode } from \"./vnode\";\nimport * as is from \"./is\";\nimport { htmlDomApi, DOMAPI } from \"./htmldomapi\";\n\ntype NonUndefined<T> = T extends undefined ? never : T;\n\nfunction isUndef(s: any): boolean {\n  return s === undefined;\n}\nfunction isDef<A>(s: A): s is NonUndefined<A> {\n  return s !== undefined;\n}\n\ntype VNodeQueue = VNode[];\n\nconst emptyNode = vnode(\"\", {}, [], undefined, undefined);\n\nfunction sameVnode(vnode1: VNode, vnode2: VNode): boolean {\n  const isSameKey = vnode1.key === vnode2.key;\n  const isSameIs = vnode1.data?.is === vnode2.data?.is;\n  const isSameSel = vnode1.sel === vnode2.sel;\n  const isSameTextOrFragment =\n    !vnode1.sel && vnode1.sel === vnode2.sel\n      ? typeof vnode1.text === typeof vnode2.text\n      : true;\n\n  return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\n}\n\n/**\n * @todo Remove this function when the document fragment is considered stable.\n */\nfunction documentFragmentIsNotSupported(): never {\n  throw new Error(\"The document fragment is not supported on this platform.\");\n}\n\nfunction isElement(\n  api: DOMAPI,\n  vnode: Element | DocumentFragment | VNode\n): vnode is Element {\n  return api.isElement(vnode as any);\n}\n\nfunction isDocumentFragment(\n  api: DOMAPI,\n  vnode: DocumentFragment | VNode\n): vnode is DocumentFragment {\n  return api.isDocumentFragment!(vnode as any);\n}\n\ntype KeyToIndexMap = { [key: string]: number };\n\ntype ArraysOf<T> = {\n  [K in keyof T]: Array<T[K]>;\n};\n\ntype ModuleHooks = ArraysOf<Required<Module>>;\n\nfunction createKeyToOldIdx(\n  children: VNode[],\n  beginIdx: number,\n  endIdx: number\n): KeyToIndexMap {\n  const map: KeyToIndexMap = {};\n  for (let i = beginIdx; i <= endIdx; ++i) {\n    const key = children[i]?.key;\n    if (key !== undefined) {\n      map[key as string] = i;\n    }\n  }\n  return map;\n}\n\nconst hooks: Array<keyof Module> = [\n  \"create\",\n  \"update\",\n  \"remove\",\n  \"destroy\",\n  \"pre\",\n  \"post\",\n];\n\n// TODO Should `domApi` be put into this in the next major version bump?\nexport type Options = {\n  experimental?: {\n    fragments?: boolean;\n  };\n};\n\nexport function init(\n  modules: Array<Partial<Module>>,\n  domApi?: DOMAPI,\n  options?: Options\n) {\n  const cbs: ModuleHooks = {\n    create: [],\n    update: [],\n    remove: [],\n    destroy: [],\n    pre: [],\n    post: [],\n  };\n\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi;\n\n  for (const hook of hooks) {\n    for (const module of modules) {\n      const currentHook = module[hook];\n      if (currentHook !== undefined) {\n        (cbs[hook] as any[]).push(currentHook);\n      }\n    }\n  }\n\n  function emptyNodeAt(elm: Element) {\n    const id = elm.id ? \"#\" + elm.id : \"\";\n\n    // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.\n    // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring\n    const classes = elm.getAttribute(\"class\");\n\n    const c = classes ? \".\" + classes.split(\" \").join(\".\") : \"\";\n    return vnode(\n      api.tagName(elm).toLowerCase() + id + c,\n      {},\n      [],\n      undefined,\n      elm\n    );\n  }\n\n  function emptyDocumentFragmentAt(frag: DocumentFragment) {\n    return vnode(undefined, {}, [], undefined, frag);\n  }\n\n  function createRmCb(childElm: Node, listeners: number) {\n    return function rmCb() {\n      if (--listeners === 0) {\n        const parent = api.parentNode(childElm) as Node;\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  function createElm(vnode: VNode, insertedVnodeQueue: VNodeQueue): Node {\n    let i: any;\n    let data = vnode.data;\n    if (data !== undefined) {\n      const init = data.hook?.init;\n      if (isDef(init)) {\n        init(vnode);\n        data = vnode.data;\n      }\n    }\n    const children = vnode.children;\n    const sel = vnode.sel;\n    if (sel === \"!\") {\n      if (isUndef(vnode.text)) {\n        vnode.text = \"\";\n      }\n      vnode.elm = api.createComment(vnode.text!);\n    } else if (sel !== undefined) {\n      // Parse selector\n      const hashIdx = sel.indexOf(\"#\");\n      const dotIdx = sel.indexOf(\".\", hashIdx);\n      const hash = hashIdx > 0 ? hashIdx : sel.length;\n      const dot = dotIdx > 0 ? dotIdx : sel.length;\n      const tag =\n        hashIdx !== -1 || dotIdx !== -1\n          ? sel.slice(0, Math.min(hash, dot))\n          : sel;\n      const elm = (vnode.elm =\n        isDef(data) && isDef((i = data.ns))\n          ? api.createElementNS(i, tag, data)\n          : api.createElement(tag, data));\n      if (hash < dot) elm.setAttribute(\"id\", sel.slice(hash + 1, dot));\n      if (dotIdx > 0)\n        elm.setAttribute(\"class\", sel.slice(dot + 1).replace(/\\./g, \" \"));\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\n      if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n          const ch = children[i];\n          if (ch != null) {\n            api.appendChild(elm, createElm(ch as VNode, insertedVnodeQueue));\n          }\n        }\n      } else if (is.primitive(vnode.text)) {\n        api.appendChild(elm, api.createTextNode(vnode.text));\n      }\n      const hook = vnode.data!.hook;\n      if (isDef(hook)) {\n        hook.create?.(emptyNode, vnode);\n        if (hook.insert) {\n          insertedVnodeQueue.push(vnode);\n        }\n      }\n    } else if (options?.experimental?.fragments && vnode.children) {\n      vnode.elm = (\n        api.createDocumentFragment ?? documentFragmentIsNotSupported\n      )();\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\n      for (i = 0; i < vnode.children.length; ++i) {\n        const ch = vnode.children[i];\n        if (ch != null) {\n          api.appendChild(\n            vnode.elm,\n            createElm(ch as VNode, insertedVnodeQueue)\n          );\n        }\n      }\n    } else {\n      vnode.elm = api.createTextNode(vnode.text!);\n    }\n    return vnode.elm;\n  }\n\n  function addVnodes(\n    parentElm: Node,\n    before: Node | null,\n    vnodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n    insertedVnodeQueue: VNodeQueue\n  ) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vnodes[startIdx];\n      if (ch != null) {\n        api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n      }\n    }\n  }\n\n  function invokeDestroyHook(vnode: VNode) {\n    const data = vnode.data;\n    if (data !== undefined) {\n      data?.hook?.destroy?.(vnode);\n      for (let i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\n      if (vnode.children !== undefined) {\n        for (let j = 0; j < vnode.children.length; ++j) {\n          const child = vnode.children[j];\n          if (child != null && typeof child !== \"string\") {\n            invokeDestroyHook(child);\n          }\n        }\n      }\n    }\n  }\n\n  function removeVnodes(\n    parentElm: Node,\n    vnodes: VNode[],\n    startIdx: number,\n    endIdx: number\n  ): void {\n    for (; startIdx <= endIdx; ++startIdx) {\n      let listeners: number;\n      let rm: () => void;\n      const ch = vnodes[startIdx];\n      if (ch != null) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch);\n          listeners = cbs.remove.length + 1;\n          rm = createRmCb(ch.elm!, listeners);\n          for (let i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          const removeHook = ch?.data?.hook?.remove;\n          if (isDef(removeHook)) {\n            removeHook(ch, rm);\n          } else {\n            rm();\n          }\n        } else if (ch.children) {\n          // Fragment node\n          invokeDestroyHook(ch);\n          removeVnodes(\n            parentElm,\n            ch.children as VNode[],\n            0,\n            ch.children.length - 1\n          );\n        } else {\n          // Text node\n          api.removeChild(parentElm, ch.elm!);\n        }\n      }\n    }\n  }\n\n  function updateChildren(\n    parentElm: Node,\n    oldCh: VNode[],\n    newCh: VNode[],\n    insertedVnodeQueue: VNodeQueue\n  ) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx: KeyToIndexMap | undefined;\n    let idxInOld: number;\n    let elmToMove: VNode;\n    let before: any;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (oldStartVnode == null) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n      } else if (oldEndVnode == null) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (newStartVnode == null) {\n        newStartVnode = newCh[++newStartIdx];\n      } else if (newEndVnode == null) {\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\n        // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        api.insertBefore(\n          parentElm,\n          oldStartVnode.elm!,\n          api.nextSibling(oldEndVnode.elm!)\n        );\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\n        // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldEndVnode.elm!, oldStartVnode.elm!);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n        idxInOld = oldKeyToIdx[newStartVnode.key as string];\n        if (isUndef(idxInOld)) {\n          // New element\n          api.insertBefore(\n            parentElm,\n            createElm(newStartVnode, insertedVnodeQueue),\n            oldStartVnode.elm!\n          );\n        } else {\n          elmToMove = oldCh[idxInOld];\n          if (elmToMove.sel !== newStartVnode.sel) {\n            api.insertBefore(\n              parentElm,\n              createElm(newStartVnode, insertedVnodeQueue),\n              oldStartVnode.elm!\n            );\n          } else {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined as any;\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVnode.elm!);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n\n    if (newStartIdx <= newEndIdx) {\n      before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(\n        parentElm,\n        before,\n        newCh,\n        newStartIdx,\n        newEndIdx,\n        insertedVnodeQueue\n      );\n    }\n    if (oldStartIdx <= oldEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode(\n    oldVnode: VNode,\n    vnode: VNode,\n    insertedVnodeQueue: VNodeQueue\n  ) {\n    const hook = vnode.data?.hook;\n    hook?.prepatch?.(oldVnode, vnode);\n    const elm = (vnode.elm = oldVnode.elm)!;\n    if (oldVnode === vnode) return;\n    if (\n      vnode.data !== undefined ||\n      (isDef(vnode.text) && vnode.text !== oldVnode.text)\n    ) {\n      vnode.data ??= {};\n      oldVnode.data ??= {};\n      for (let i = 0; i < cbs.update.length; ++i)\n        cbs.update[i](oldVnode, vnode);\n      vnode.data?.hook?.update?.(oldVnode, vnode);\n    }\n    const oldCh = oldVnode.children as VNode[];\n    const ch = vnode.children as VNode[];\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) api.setTextContent(elm, \"\");\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, \"\");\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      }\n      api.setTextContent(elm, vnode.text!);\n    }\n    hook?.postpatch?.(oldVnode, vnode);\n  }\n\n  return function patch(\n    oldVnode: VNode | Element | DocumentFragment,\n    vnode: VNode\n  ): VNode {\n    let i: number, elm: Node, parent: Node;\n    const insertedVnodeQueue: VNodeQueue = [];\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    if (isElement(api, oldVnode)) {\n      oldVnode = emptyNodeAt(oldVnode);\n    } else if (isDocumentFragment(api, oldVnode)) {\n      oldVnode = emptyDocumentFragmentAt(oldVnode);\n    }\n\n    if (sameVnode(oldVnode, vnode)) {\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\n    } else {\n      elm = oldVnode.elm!;\n      parent = api.parentNode(elm) as Node;\n\n      createElm(vnode, insertedVnodeQueue);\n\n      if (parent !== null) {\n        api.insertBefore(parent, vnode.elm!, api.nextSibling(elm));\n        removeVnodes(parent, [oldVnode], 0, 0);\n      }\n    }\n\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      insertedVnodeQueue[i].data!.hook!.insert!(insertedVnodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vnode;\n  };\n}\n","import { vnode, VNode, VNodeData } from \"./vnode\";\nimport * as is from \"./is\";\n\nexport type VNodes = VNode[];\nexport type VNodeChildElement =\n  | VNode\n  | string\n  | number\n  | String\n  | Number\n  | undefined\n  | null;\nexport type ArrayOrElement<T> = T | T[];\nexport type VNodeChildren = ArrayOrElement<VNodeChildElement>;\n\nexport function addNS(\n  data: any,\n  children: Array<VNode | string> | undefined,\n  sel: string | undefined\n): void {\n  data.ns = \"http://www.w3.org/2000/svg\";\n  if (sel !== \"foreignObject\" && children !== undefined) {\n    for (let i = 0; i < children.length; ++i) {\n      const child = children[i];\n      if (typeof child === \"string\") continue;\n      const childData = child.data;\n      if (childData !== undefined) {\n        addNS(childData, child.children as VNodes, child.sel);\n      }\n    }\n  }\n}\n\nexport function h(sel: string): VNode;\nexport function h(sel: string, data: VNodeData | null): VNode;\nexport function h(sel: string, children: VNodeChildren): VNode;\nexport function h(\n  sel: string,\n  data: VNodeData | null,\n  children: VNodeChildren\n): VNode;\nexport function h(sel: any, b?: any, c?: any): VNode {\n  let data: VNodeData = {};\n  let children: any;\n  let text: any;\n  let i: number;\n  if (c !== undefined) {\n    if (b !== null) {\n      data = b;\n    }\n    if (is.array(c)) {\n      children = c;\n    } else if (is.primitive(c)) {\n      text = c.toString();\n    } else if (c && c.sel) {\n      children = [c];\n    }\n  } else if (b !== undefined && b !== null) {\n    if (is.array(b)) {\n      children = b;\n    } else if (is.primitive(b)) {\n      text = b.toString();\n    } else if (b && b.sel) {\n      children = [b];\n    } else {\n      data = b;\n    }\n  }\n  if (children !== undefined) {\n    for (i = 0; i < children.length; ++i) {\n      if (is.primitive(children[i]))\n        children[i] = vnode(\n          undefined,\n          undefined,\n          undefined,\n          children[i],\n          undefined\n        );\n    }\n  }\n  if (\n    sel[0] === \"s\" &&\n    sel[1] === \"v\" &&\n    sel[2] === \"g\" &&\n    (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")\n  ) {\n    addNS(data, children, sel);\n  }\n  return vnode(sel, data, children, text, undefined);\n}\n\n/**\n * @experimental\n */\nexport function fragment(children: VNodeChildren): VNode {\n  let c: any;\n  let text: any;\n\n  if (is.array(children)) {\n    c = children;\n  } else if (is.primitive(c)) {\n    text = children;\n  } else if (c && c.sel) {\n    c = [children];\n  }\n\n  if (c !== undefined) {\n    for (let i = 0; i < c.length; ++i) {\n      if (is.primitive(c[i]))\n        c[i] = vnode(undefined, undefined, undefined, c[i], undefined);\n    }\n  }\n\n  return vnode(undefined, {}, c, text, undefined);\n}\n","import { VNode, VNodeData } from \"./vnode\";\nimport { h, addNS } from \"./h\";\n\nexport interface ThunkData extends VNodeData {\n  fn: () => VNode;\n  args: any[];\n}\n\nexport interface Thunk extends VNode {\n  data: ThunkData;\n}\n\nexport interface ThunkFn {\n  (sel: string, fn: (...args: any[]) => any, args: any[]): Thunk;\n  (sel: string, key: any, fn: (...args: any[]) => any, args: any[]): Thunk;\n}\n\nfunction copyToThunk(vnode: VNode, thunk: VNode): void {\n  const ns = thunk.data?.ns;\n  (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\n  (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\n  thunk.data = vnode.data;\n  thunk.children = vnode.children;\n  thunk.text = vnode.text;\n  thunk.elm = vnode.elm;\n  if (ns) addNS(thunk.data, thunk.children, thunk.sel);\n}\n\nfunction init(thunk: VNode): void {\n  const cur = thunk.data as VNodeData;\n  const vnode = (cur.fn as any)(...cur.args!);\n  copyToThunk(vnode, thunk);\n}\n\nfunction prepatch(oldVnode: VNode, thunk: VNode): void {\n  let i: number;\n  const old = oldVnode.data as VNodeData;\n  const cur = thunk.data as VNodeData;\n  const oldArgs = old.args;\n  const args = cur.args;\n  if (old.fn !== cur.fn || (oldArgs as any).length !== (args as any).length) {\n    copyToThunk((cur.fn as any)(...args!), thunk);\n    return;\n  }\n  for (i = 0; i < (args as any).length; ++i) {\n    if ((oldArgs as any)[i] !== (args as any)[i]) {\n      copyToThunk((cur.fn as any)(...args!), thunk);\n      return;\n    }\n  }\n  copyToThunk(oldVnode, thunk);\n}\n\nexport const thunk = function thunk(\n  sel: string,\n  key?: any,\n  fn?: any,\n  args?: any\n): VNode {\n  if (args === undefined) {\n    args = fn;\n    fn = key;\n    key = undefined;\n  }\n  return h(sel, {\n    key: key,\n    hook: { init, prepatch },\n    fn: fn,\n    args: args,\n  });\n} as ThunkFn;\n","import { VNode, VNodeData } from \"../vnode\";\n\nexport interface AttachData {\n  [key: string]: any;\n  [i: number]: any;\n  placeholder?: any;\n  real?: Node;\n}\n\ninterface VNodeDataWithAttach extends VNodeData {\n  attachData: AttachData;\n}\n\ninterface VNodeWithAttachData extends VNode {\n  data: VNodeDataWithAttach;\n}\n\nfunction pre(vnode: VNodeWithAttachData, newVnode: VNodeWithAttachData): void {\n  const attachData = vnode.data.attachData;\n  // Copy created placeholder and real element from old vnode\n  newVnode.data.attachData.placeholder = attachData.placeholder;\n  newVnode.data.attachData.real = attachData.real;\n  // Mount real element in vnode so the patch process operates on it\n  vnode.elm = vnode.data.attachData.real;\n}\n\nfunction post(_: any, vnode: VNodeWithAttachData): void {\n  // Mount dummy placeholder in vnode so potential reorders use it\n  vnode.elm = vnode.data.attachData.placeholder;\n}\n\nfunction destroy(vnode: VNodeWithAttachData): void {\n  // Remove placeholder\n  if (vnode.elm !== undefined) {\n    (vnode.elm.parentNode as HTMLElement).removeChild(vnode.elm);\n  }\n  // Remove real element from where it was inserted\n  vnode.elm = vnode.data.attachData.real;\n}\n\nfunction create(_: any, vnode: VNodeWithAttachData): void {\n  const real = vnode.elm;\n  const attachData = vnode.data.attachData;\n  const placeholder = document.createElement(\"span\");\n  // Replace actual element with dummy placeholder\n  // Snabbdom will then insert placeholder instead\n  vnode.elm = placeholder;\n  attachData.target.appendChild(real);\n  attachData.real = real;\n  attachData.placeholder = placeholder;\n}\n\nexport function attachTo(target: Element, vnode: VNode): VNode {\n  if (vnode.data === undefined) vnode.data = {};\n  if (vnode.data.hook === undefined) vnode.data.hook = {};\n  const data = vnode.data;\n  const hook = vnode.data.hook;\n  data.attachData = { target: target, placeholder: undefined, real: undefined };\n  hook.create = create;\n  hook.prepatch = pre;\n  hook.postpatch = post;\n  hook.destroy = destroy;\n  return vnode;\n}\n","import { addNS } from \"./h\";\nimport { vnode, VNode } from \"./vnode\";\nimport { htmlDomApi, DOMAPI } from \"./htmldomapi\";\n\nexport function toVNode(node: Node, domApi?: DOMAPI): VNode {\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi;\n  let text: string;\n  if (api.isElement(node)) {\n    const id = node.id ? \"#\" + node.id : \"\";\n    const cn = node.getAttribute(\"class\");\n    const c = cn ? \".\" + cn.split(\" \").join(\".\") : \"\";\n    const sel = api.tagName(node).toLowerCase() + id + c;\n    const attrs: any = {};\n    const dataset: Record<string, string> = {};\n    const data: Record<string, any> = {};\n\n    const children: VNode[] = [];\n    let name: string;\n    let i: number, n: number;\n    const elmAttrs = node.attributes;\n    const elmChildren = node.childNodes;\n    for (i = 0, n = elmAttrs.length; i < n; i++) {\n      name = elmAttrs[i].nodeName;\n      if (\n        name[0] === \"d\" &&\n        name[1] === \"a\" &&\n        name[2] === \"t\" &&\n        name[3] === \"a\" &&\n        name[4] === \"-\"\n      ) {\n        dataset[name.slice(5)] = elmAttrs[i].nodeValue || \"\";\n      } else if (name !== \"id\" && name !== \"class\") {\n        attrs[name] = elmAttrs[i].nodeValue;\n      }\n    }\n    for (i = 0, n = elmChildren.length; i < n; i++) {\n      children.push(toVNode(elmChildren[i], domApi));\n    }\n\n    if (Object.keys(attrs).length > 0) data.attrs = attrs;\n    if (Object.keys(dataset).length > 0) data.dataset = dataset;\n\n    if (\n      sel[0] === \"s\" &&\n      sel[1] === \"v\" &&\n      sel[2] === \"g\" &&\n      (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")\n    ) {\n      addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, undefined, node);\n  } else if (api.isText(node)) {\n    text = api.getTextContent(node) as string;\n    return vnode(undefined, undefined, undefined, text, node);\n  } else if (api.isComment(node)) {\n    text = api.getTextContent(node) as string;\n    return vnode(\"!\", {}, [], text, node as any);\n  } else {\n    return vnode(\"\", {}, [], undefined, node as any);\n  }\n}\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\nexport type Attrs = Record<string, string | number | boolean>;\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\nconst colonChar = 58;\nconst xChar = 120;\n\nfunction updateAttrs(oldVnode: VNode, vnode: VNode): void {\n  let key: string;\n  const elm: Element = vnode.elm as Element;\n  let oldAttrs = (oldVnode.data as VNodeData).attrs;\n  let attrs = (vnode.data as VNodeData).attrs;\n\n  if (!oldAttrs && !attrs) return;\n  if (oldAttrs === attrs) return;\n  oldAttrs = oldAttrs || {};\n  attrs = attrs || {};\n\n  // update modified attributes, add new attributes\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n    if (old !== cur) {\n      if (cur === true) {\n        elm.setAttribute(key, \"\");\n      } else if (cur === false) {\n        elm.removeAttribute(key);\n      } else {\n        if (key.charCodeAt(0) !== xChar) {\n          elm.setAttribute(key, cur as any);\n        } else if (key.charCodeAt(3) === colonChar) {\n          // Assume xml namespace\n          elm.setAttributeNS(xmlNS, key, cur as any);\n        } else if (key.charCodeAt(5) === colonChar) {\n          // Assume xlink namespace\n          elm.setAttributeNS(xlinkNS, key, cur as any);\n        } else {\n          elm.setAttribute(key, cur as any);\n        }\n      }\n    }\n  }\n  // remove removed attributes\n  // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n  // the other option is to remove all attributes with value == undefined\n  for (key in oldAttrs) {\n    if (!(key in attrs)) {\n      elm.removeAttribute(key);\n    }\n  }\n}\n\nexport const attributesModule: Module = {\n  create: updateAttrs,\n  update: updateAttrs,\n};\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\nexport type Classes = Record<string, boolean>;\n\nfunction updateClass(oldVnode: VNode, vnode: VNode): void {\n  let cur: any;\n  let name: string;\n  const elm: Element = vnode.elm as Element;\n  let oldClass = (oldVnode.data as VNodeData).class;\n  let klass = (vnode.data as VNodeData).class;\n\n  if (!oldClass && !klass) return;\n  if (oldClass === klass) return;\n  oldClass = oldClass || {};\n  klass = klass || {};\n\n  for (name in oldClass) {\n    if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {\n      // was `true` and now not provided\n      elm.classList.remove(name);\n    }\n  }\n  for (name in klass) {\n    cur = klass[name];\n    if (cur !== oldClass[name]) {\n      (elm.classList as any)[cur ? \"add\" : \"remove\"](name);\n    }\n  }\n}\n\nexport const classModule: Module = { create: updateClass, update: updateClass };\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\nexport type Dataset = Record<string, string>;\n\nconst CAPS_REGEX = /[A-Z]/g;\n\nfunction updateDataset(oldVnode: VNode, vnode: VNode): void {\n  const elm: HTMLElement = vnode.elm as HTMLElement;\n  let oldDataset = (oldVnode.data as VNodeData).dataset;\n  let dataset = (vnode.data as VNodeData).dataset;\n  let key: string;\n\n  if (!oldDataset && !dataset) return;\n  if (oldDataset === dataset) return;\n  oldDataset = oldDataset || {};\n  dataset = dataset || {};\n  const d = elm.dataset;\n\n  for (key in oldDataset) {\n    if (!dataset[key]) {\n      if (d) {\n        if (key in d) {\n          delete d[key];\n        }\n      } else {\n        elm.removeAttribute(\n          \"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase()\n        );\n      }\n    }\n  }\n  for (key in dataset) {\n    if (oldDataset[key] !== dataset[key]) {\n      if (d) {\n        d[key] = dataset[key];\n      } else {\n        elm.setAttribute(\n          \"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase(),\n          dataset[key]\n        );\n      }\n    }\n  }\n}\n\nexport const datasetModule: Module = {\n  create: updateDataset,\n  update: updateDataset,\n};\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\ntype Listener<T> = (this: VNode, ev: T, vnode: VNode) => void;\n\nexport type On = {\n  [N in keyof HTMLElementEventMap]?:\n    | Listener<HTMLElementEventMap[N]>\n    | Array<Listener<HTMLElementEventMap[N]>>;\n} & {\n  [event: string]: Listener<any> | Array<Listener<any>>;\n};\n\ntype SomeListener<N extends keyof HTMLElementEventMap> =\n  | Listener<HTMLElementEventMap[N]>\n  | Listener<any>;\n\nfunction invokeHandler<N extends keyof HTMLElementEventMap>(\n  handler: SomeListener<N> | Array<SomeListener<N>>,\n  vnode: VNode,\n  event?: Event\n): void {\n  if (typeof handler === \"function\") {\n    // call function handler\n    handler.call(vnode, event, vnode);\n  } else if (typeof handler === \"object\") {\n    // call multiple handlers\n    for (let i = 0; i < handler.length; i++) {\n      invokeHandler(handler[i], vnode, event);\n    }\n  }\n}\n\nfunction handleEvent(event: Event, vnode: VNode) {\n  const name = event.type;\n  const on = (vnode.data as VNodeData).on;\n\n  // call event handler(s) if exists\n  if (on && on[name]) {\n    invokeHandler(on[name], vnode, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event: Event) {\n    handleEvent(event, (handler as any).vnode);\n  };\n}\n\nfunction updateEventListeners(oldVnode: VNode, vnode?: VNode): void {\n  const oldOn = (oldVnode.data as VNodeData).on;\n  const oldListener = (oldVnode as any).listener;\n  const oldElm: Element = oldVnode.elm as Element;\n  const on = vnode && (vnode.data as VNodeData).on;\n  const elm: Element = (vnode && vnode.elm) as Element;\n  let name: string;\n\n  // optimization for reused immutable handlers\n  if (oldOn === on) {\n    return;\n  }\n\n  // remove existing listeners which no longer used\n  if (oldOn && oldListener) {\n    // if element changed or deleted we remove all existing listeners unconditionally\n    if (!on) {\n      for (name in oldOn) {\n        // remove listener if element was changed or existing listeners removed\n        oldElm.removeEventListener(name, oldListener, false);\n      }\n    } else {\n      for (name in oldOn) {\n        // remove listener if existing listener removed\n        if (!on[name]) {\n          oldElm.removeEventListener(name, oldListener, false);\n        }\n      }\n    }\n  }\n\n  // add new listeners which has not already attached\n  if (on) {\n    // reuse existing listener or create new\n    const listener = ((vnode as any).listener =\n      (oldVnode as any).listener || createListener());\n    // update vnode for listener\n    listener.vnode = vnode;\n\n    // if element changed or added we add all needed listeners unconditionally\n    if (!oldOn) {\n      for (name in on) {\n        // add listener if element was changed or new listeners added\n        elm.addEventListener(name, listener, false);\n      }\n    } else {\n      for (name in on) {\n        // add listener if new listener added\n        if (!oldOn[name]) {\n          elm.addEventListener(name, listener, false);\n        }\n      }\n    }\n  }\n}\n\nexport const eventListenersModule: Module = {\n  create: updateEventListeners,\n  update: updateEventListeners,\n  destroy: updateEventListeners,\n};\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\nexport type Props = Record<string, any>;\n\nfunction updateProps(oldVnode: VNode, vnode: VNode): void {\n  let key: string;\n  let cur: any;\n  let old: any;\n  const elm = vnode.elm;\n  let oldProps = (oldVnode.data as VNodeData).props;\n  let props = (vnode.data as VNodeData).props;\n\n  if (!oldProps && !props) return;\n  if (oldProps === props) return;\n  oldProps = oldProps || {};\n  props = props || {};\n\n  for (key in props) {\n    cur = props[key];\n    old = oldProps[key];\n    if (old !== cur && (key !== \"value\" || (elm as any)[key] !== cur)) {\n      (elm as any)[key] = cur;\n    }\n  }\n}\n\nexport const propsModule: Module = { create: updateProps, update: updateProps };\n","import { VNode, VNodeData } from \"../vnode\";\nimport { Module } from \"./module\";\n\nexport type VNodeStyle = Record<string, string> & {\n  delayed?: Record<string, string>;\n  remove?: Record<string, string>;\n};\n\n// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.\nconst raf =\n  (typeof window !== \"undefined\" &&\n    window.requestAnimationFrame.bind(window)) ||\n  setTimeout;\nconst nextFrame = function (fn: any) {\n  raf(function () {\n    raf(fn);\n  });\n};\nlet reflowForced = false;\n\nfunction setNextFrame(obj: any, prop: string, val: any): void {\n  nextFrame(function () {\n    obj[prop] = val;\n  });\n}\n\nfunction updateStyle(oldVnode: VNode, vnode: VNode): void {\n  let cur: any;\n  let name: string;\n  const elm = vnode.elm;\n  let oldStyle = (oldVnode.data as VNodeData).style;\n  let style = (vnode.data as VNodeData).style;\n\n  if (!oldStyle && !style) return;\n  if (oldStyle === style) return;\n  oldStyle = oldStyle || {};\n  style = style || {};\n  const oldHasDel = \"delayed\" in oldStyle;\n\n  for (name in oldStyle) {\n    if (!style[name]) {\n      if (name[0] === \"-\" && name[1] === \"-\") {\n        (elm as any).style.removeProperty(name);\n      } else {\n        (elm as any).style[name] = \"\";\n      }\n    }\n  }\n  for (name in style) {\n    cur = style[name];\n    if (name === \"delayed\" && style.delayed) {\n      for (const name2 in style.delayed) {\n        cur = style.delayed[name2];\n        if (!oldHasDel || cur !== (oldStyle.delayed as any)[name2]) {\n          setNextFrame((elm as any).style, name2, cur);\n        }\n      }\n    } else if (name !== \"remove\" && cur !== oldStyle[name]) {\n      if (name[0] === \"-\" && name[1] === \"-\") {\n        (elm as any).style.setProperty(name, cur);\n      } else {\n        (elm as any).style[name] = cur;\n      }\n    }\n  }\n}\n\nfunction applyDestroyStyle(vnode: VNode): void {\n  let style: any;\n  let name: string;\n  const elm = vnode.elm;\n  const s = (vnode.data as VNodeData).style;\n  if (!s || !(style = s.destroy)) return;\n  for (name in style) {\n    (elm as any).style[name] = style[name];\n  }\n}\n\nfunction applyRemoveStyle(vnode: VNode, rm: () => void): void {\n  const s = (vnode.data as VNodeData).style;\n  if (!s || !s.remove) {\n    rm();\n    return;\n  }\n  if (!reflowForced) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    (vnode.elm as any).offsetLeft;\n    reflowForced = true;\n  }\n  let name: string;\n  const elm = vnode.elm;\n  let i = 0;\n  const style = s.remove;\n  let amount = 0;\n  const applied: string[] = [];\n  for (name in style) {\n    applied.push(name);\n    (elm as any).style[name] = style[name];\n  }\n  const compStyle = getComputedStyle(elm as Element);\n  const props = (compStyle as any)[\"transition-property\"].split(\", \");\n  for (; i < props.length; ++i) {\n    if (applied.indexOf(props[i]) !== -1) amount++;\n  }\n  (elm as Element).addEventListener(\n    \"transitionend\",\n    function (ev: TransitionEvent) {\n      if (ev.target === elm) --amount;\n      if (amount === 0) rm();\n    }\n  );\n}\n\nfunction forceReflow() {\n  reflowForced = false;\n}\n\nexport const styleModule: Module = {\n  pre: forceReflow,\n  create: updateStyle,\n  update: updateStyle,\n  destroy: applyDestroyStyle,\n  remove: applyRemoveStyle,\n};\n","/* eslint-disable @typescript-eslint/no-namespace, import/export */\nimport { Key, vnode, VNode, VNodeData } from \"./vnode\";\nimport { h, ArrayOrElement } from \"./h\";\n\n// See https://www.typescriptlang.org/docs/handbook/jsx.html#type-checking\nnamespace JSXInternal {\n  export type Element = VNode;\n  export interface IntrinsicElements {\n    [elemName: string]: VNodeData;\n  }\n}\n\n// for conditional rendering we support boolean child element e.g cond && <tag />\nexport type JsxVNodeChild =\n  | VNode\n  | string\n  | number\n  | boolean\n  | undefined\n  | null;\nexport type JsxVNodeChildren = ArrayOrElement<JsxVNodeChild>;\n\nexport type FunctionComponent = (\n  props: { [prop: string]: any } | null,\n  children?: VNode[]\n) => VNode;\n\nexport function Fragment(\n  data: { key?: Key } | null,\n  ...children: JsxVNodeChildren[]\n): VNode {\n  const flatChildren = flattenAndFilter(children, []);\n\n  if (\n    flatChildren.length === 1 &&\n    !flatChildren[0].sel &&\n    flatChildren[0].text\n  ) {\n    // only child is a simple text node, pass as text for a simpler vtree\n    return vnode(\n      undefined,\n      undefined,\n      undefined,\n      flatChildren[0].text,\n      undefined\n    );\n  } else {\n    return vnode(undefined, data ?? {}, flatChildren, undefined, undefined);\n  }\n}\n\nfunction flattenAndFilter(\n  children: JsxVNodeChildren[],\n  flattened: VNode[]\n): VNode[] {\n  for (const child of children) {\n    // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart\n    if (\n      child !== undefined &&\n      child !== null &&\n      child !== false &&\n      child !== \"\"\n    ) {\n      if (Array.isArray(child)) {\n        flattenAndFilter(child, flattened);\n      } else if (\n        typeof child === \"string\" ||\n        typeof child === \"number\" ||\n        typeof child === \"boolean\"\n      ) {\n        flattened.push(\n          vnode(undefined, undefined, undefined, String(child), undefined)\n        );\n      } else {\n        flattened.push(child);\n      }\n    }\n  }\n  return flattened;\n}\n\n/**\n * jsx/tsx compatible factory function\n * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions\n */\nexport function jsx(\n  tag: string | FunctionComponent,\n  data: VNodeData | null,\n  ...children: JsxVNodeChildren[]\n): VNode {\n  const flatChildren = flattenAndFilter(children, []);\n  if (typeof tag === \"function\") {\n    // tag is a function component\n    return tag(data, flatChildren);\n  } else {\n    if (\n      flatChildren.length === 1 &&\n      !flatChildren[0].sel &&\n      flatChildren[0].text\n    ) {\n      // only child is a simple text node, pass as text for a simpler vtree\n      return h(tag, data, flatChildren[0].text);\n    } else {\n      return h(tag, data, flatChildren);\n    }\n  }\n}\n\nexport namespace jsx {\n  export import JSX = JSXInternal; // eslint-disable-line @typescript-eslint/no-unused-vars\n}\n","// core\nexport { DOMAPI, htmlDomApi } from \"./htmldomapi\";\nexport { init, Options } from \"./init\";\nexport { ThunkData, Thunk, ThunkFn, thunk } from \"./thunk\";\nexport { Key, VNode, VNodeData, vnode } from \"./vnode\";\n\n// helpers\nexport { AttachData, attachTo } from \"./helpers/attachto\";\nexport { array, primitive } from \"./is\";\nexport { toVNode } from \"./tovnode\";\nexport {\n  VNodes,\n  VNodeChildElement,\n  ArrayOrElement,\n  VNodeChildren,\n  h,\n  fragment,\n} from \"./h\";\n\n// types\nexport * from \"./hooks\";\nexport { Module } from \"./modules/module\";\n\n// modules\nexport { Attrs, attributesModule } from \"./modules/attributes\";\nexport { Classes, classModule } from \"./modules/class\";\nexport { Dataset, datasetModule } from \"./modules/dataset\";\nexport { On, eventListenersModule } from \"./modules/eventlisteners\";\nexport { Props, propsModule } from \"./modules/props\";\nexport { VNodeStyle, styleModule } from \"./modules/style\";\n\n// JSX\nexport {\n  JsxVNodeChild,\n  JsxVNodeChildren,\n  FunctionComponent,\n  jsx,\n  Fragment,\n} from \"./jsx\";\n","import { VNode, h } from \"snabbdom\";\n\nexport const factory = () => {\n\treturn h(\n\t\t\"svg.shop-svg\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"512\",\n\t\t\t\theight: \"512\",\n\t\t\t\tviewBox: \"0 0 512 512\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 352.586 45.736 C 352.245 49.456, 349.031 96.805, 345.444 150.955 C 341.857 205.106, 338.827 249.488, 338.711 249.582 C 337.719 250.387, 327.186 256, 326.669 256 C 326.301 256, 326 241.150, 326 223 C 326 204.850, 325.828 190, 325.618 190 C 325.408 190, 298.076 204.680, 264.880 222.623 C 231.684 240.565, 203.956 255.463, 203.262 255.730 C 202.262 256.114, 202 249.331, 202 223.024 C 202 204.365, 201.615 189.979, 201.121 190.167 C 200.638 190.350, 169.138 207.316, 131.121 227.869 L 62 265.239 62 361.119 L 62 457 46 457 L 30 457 30 465 L 30 473 256 473 L 482 473 482 465 L 482 457 466 457 L 450 457 450 323.500 C 450 250.075, 449.762 190, 449.471 190 C 449.180 190, 444.383 192.478, 438.811 195.506 C 433.239 198.535, 428.570 200.897, 428.436 200.756 C 428.303 200.615, 425.787 164.275, 422.847 120 L 417.500 39.500 385.353 39.236 L 353.206 38.973 352.586 45.736 M 368.553 56.250 C 368.341 56.938, 367.917 61.888, 367.611 67.250 L 367.054 77 385.027 77 L 403 77 402.993 72.750 C 402.989 70.412, 402.699 65.463, 402.348 61.750 L 401.711 55 385.324 55 C 373.086 55, 368.840 55.317, 368.553 56.250 M 365.987 94.750 C 365.980 95.162, 363.755 127.888, 361.043 167.472 C 358.330 207.057, 356.216 239.550, 356.345 239.678 C 356.632 239.966, 410.186 211.091, 411.301 210.047 C 411.742 209.635, 410.392 183.356, 408.301 151.649 L 404.500 94 385.250 94 C 374.663 94, 365.994 94.338, 365.987 94.750 M 132.500 246.075 L 79.500 274.707 79.245 365.853 L 78.989 457 255.995 457 L 433 457 433 337.500 C 433 271.775, 432.807 218, 432.571 218 C 432.335 218, 405.147 232.625, 372.153 250.500 C 339.159 268.375, 311.683 283, 311.095 283 C 310.365 283, 309.944 272.638, 309.763 250.215 L 309.500 217.429 249 250.171 C 215.725 268.179, 187.944 282.933, 187.263 282.957 C 186.311 282.990, 185.966 275.474, 185.763 250.221 L 185.500 217.442 132.500 246.075 M 114.460 314.243 C 114.193 314.940, 114.092 331.483, 114.237 351.005 L 114.500 386.500 151.262 386.762 L 188.025 387.025 187.762 350.262 L 187.500 313.500 151.223 313.237 C 122.661 313.031, 114.843 313.245, 114.460 314.243 M 219.679 313.654 C 219.306 314.028, 219 330.683, 219 350.667 L 219 387 256.012 387 L 293.025 387 292.762 350.250 L 292.500 313.500 256.429 313.238 C 236.590 313.093, 220.052 313.281, 219.679 313.654 M 324.679 313.654 C 324.306 314.028, 324 330.689, 324 350.679 L 324 387.025 360.750 386.762 L 397.500 386.500 397.500 350 L 397.500 313.500 361.429 313.238 C 341.590 313.093, 325.052 313.281, 324.679 313.654 M 131 350.500 L 131 371 151.500 371 L 172 371 172 350.500 L 172 330 151.500 330 L 131 330 131 350.500 M 236 350.500 L 236 371 256 371 L 276 371 276 350.500 L 276 330 256 330 L 236 330 236 350.500 M 340 350.500 L 340 371 360.500 371 L 381 371 381 350.500 L 381 330 360.500 330 L 340 330 340 350.500\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#BEBEBD\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t\t// h('path', {\n\t\t\t// \tattrs: {\n\t\t\t// \t\t'd': '',\n\t\t\t// \t\t'stroke': 'none',\n\t\t\t// \t\t'fill': '#080404',\n\t\t\t// \t\t'fill-rule': 'evenodd'\n\t\t\t// \t}\n\t\t\t// }),\n\t\t]\n\t);\n};\n\nexport const baker = () => {\n\treturn h(\n\t\t\"svg.shop-svg\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"512\",\n\t\t\t\theight: \"512\",\n\t\t\t\tviewBox: \"0 0 512 512\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 240.669 75.594 C 219.071 79.497, 197.894 94.001, 186.358 112.791 C 183.755 117.031, 181.488 120.685, 181.319 120.911 C 181.150 121.136, 180.222 120.613, 179.256 119.748 C 175.997 116.828, 163.051 110.932, 155.249 108.815 C 144.921 106.013, 124.503 105.748, 115.121 108.294 C 99.644 112.494, 89.015 118.308, 78.186 128.496 C 60.964 144.698, 52.364 163.088, 51.291 186 C 50.082 211.832, 59.257 234.769, 77.681 251.975 C 93.533 266.780, 114.380 275, 136.072 275 L 141 275 141 353.865 C 141 432.137, 141.016 432.750, 143.073 435.365 L 145.145 438 256.073 438 C 365.667 438, 367.024 437.976, 369 436 C 370.967 434.033, 371 432.667, 371 354 L 371 274 380.340 274 C 414.912 274, 447.511 248.980, 457.910 214.465 C 470.395 173.031, 448.122 127.533, 407.731 111.957 C 383.888 102.762, 359.761 104.613, 336.434 117.427 L 330.369 120.759 327.934 116.156 C 323.977 108.673, 315.343 98.558, 307.747 92.506 C 288.555 77.215, 264.819 71.231, 240.669 75.594 M 239.175 89.964 C 218.841 95.470, 200.836 110.980, 192.994 129.746 C 188.417 140.699, 184.938 141.412, 174.500 133.537 C 158.676 121.599, 134.571 117.117, 115.831 122.627 C 98.392 127.756, 81.113 142.100, 73.222 158 C 65.734 173.090, 63.586 187.214, 66.460 202.478 C 72.472 234.413, 98.013 257.577, 129.525 259.672 C 144.465 260.665, 160.207 256.531, 172.460 248.395 C 178.311 244.510, 181.831 244.493, 184.523 248.337 C 186.814 251.607, 186.302 254.916, 183.031 257.971 C 179.519 261.251, 166.282 268.276, 160.250 270.060 L 156 271.317 156 320.158 L 156 369 186.500 369 L 217 369 217 348.955 C 217 329.005, 217.012 328.897, 219.455 326.455 C 222.453 323.456, 224.905 323.351, 228.365 326.073 L 231 328.145 231 348.573 L 231 369 240 369 L 249 369 249 349.111 C 249 331.272, 249.190 328.987, 250.844 326.944 C 253.120 324.133, 258.136 323.908, 260.987 326.488 C 262.879 328.200, 263 329.536, 263 348.655 L 263 369 272 369 L 281 369 281.015 348.750 C 281.024 337.613, 281.361 328.005, 281.765 327.400 C 282.768 325.898, 286.516 324, 288.480 324 C 289.366 324, 291.195 325.105, 292.545 326.455 C 294.988 328.897, 295 329.005, 295 348.955 L 295 369 325.500 369 L 356 369 356 320.158 L 356 271.317 351.750 270.067 C 345.411 268.203, 330.043 259.870, 327.886 257.128 C 325.500 254.094, 325.485 250.858, 327.844 247.944 C 330.569 244.579, 334.565 245.068, 342.259 249.709 C 345.945 251.932, 352.907 255.045, 357.731 256.626 C 365.375 259.131, 367.976 259.495, 378 259.464 C 397.917 259.402, 412.600 253.372, 426.334 239.613 C 452.717 213.183, 453.470 169.627, 428.011 142.630 C 415.896 129.785, 402.656 122.962, 385.682 120.818 C 377.616 119.799, 374.770 119.855, 367.308 121.178 C 355.917 123.197, 345.159 127.735, 337 133.965 C 327.040 141.569, 323.687 140.778, 319.024 129.726 C 311.480 111.845, 297.192 98.573, 277.817 91.452 C 267.648 87.714, 249.995 87.035, 239.175 89.964 M 156 403.500 L 156 424 256.500 424 L 357 424 357 403.500 L 357 383 256.500 383 L 156 383 156 403.500\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#BEBEBD\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t]\n\t);\n};\n\nexport const cursor = (): VNode => {\n\treturn h('svg.shop-svg', {\n\t\tattrs: {\n\t\t\t'width': '800',\n\t\t\t'height': '800',\n\t\t\t'viewBox': '0 0 800 800'\n\t\t}\n\t}, [\n\t\th('path', {\n\t\t\tattrs: {\n\t\t\t\t'd': 'M 199.500 59.343 C 185.714 63.895, 178.065 73.876, 178.022 87.371 C 178.010 91.150, 180.692 145.375, 183.982 207.871 C 187.272 270.367, 193.111 382.025, 196.957 456 C 205.692 624.007, 204.889 610.584, 206.566 616.636 C 208.451 623.437, 215.191 630.948, 222.221 634.082 C 229.418 637.291, 239.543 637.283, 246.246 634.063 C 249.666 632.421, 263.835 619.376, 296.944 587.392 C 322.218 562.976, 343.058 543, 343.256 543 C 343.454 543, 363.165 584.910, 387.058 636.134 C 420.931 708.752, 431.290 730.081, 434.085 732.964 C 439.700 738.756, 446.196 741.440, 454.500 741.400 C 461.473 741.366, 461.663 741.291, 504.366 721.433 C 551.410 699.557, 554.838 697.453, 558.927 687.949 C 560.426 684.464, 561.125 680.814, 561.125 676.473 C 561.125 668.737, 565.187 678.055, 514.093 568.587 C 492.038 521.334, 474.187 482.479, 474.424 482.242 C 474.661 482.006, 497.725 479.398, 525.677 476.448 C 601.770 468.418, 601.060 468.512, 606.629 465.672 C 620.428 458.632, 626.094 441.603, 619.377 427.359 C 616.919 422.146, 617.712 422.898, 540.499 352.515 C 465.744 284.373, 377.868 204.175, 285.233 119.553 C 245.207 82.990, 223.209 63.579, 219.733 61.758 C 213.440 58.460, 205.166 57.473, 199.500 59.343 M 204 82.288 C 202.062 83.264, 201.436 84.441, 201.214 87.523 C 201.057 89.711, 205.003 169.125, 209.983 264 C 214.963 358.875, 221.054 474.889, 223.519 521.808 C 225.983 568.728, 228 607.765, 228 608.558 C 228 610.694, 231.694 614, 234.080 614 C 236.167 614, 239.604 610.770, 316.324 536.699 C 335.010 518.659, 350.612 504.259, 350.995 504.699 C 351.378 505.140, 371.171 547.350, 394.979 598.500 C 452.149 721.328, 450.388 717.671, 452.737 718.416 C 454.106 718.851, 467.537 713.069, 496.110 699.744 C 536.292 681.005, 537.508 680.355, 537.779 677.471 C 537.984 675.285, 524.994 646.508, 488.591 568.500 C 459.739 506.673, 439.620 462.403, 440.313 462.268 C 440.966 462.140, 476.147 458.398, 518.494 453.952 C 601.132 445.277, 599 445.648, 599 439.905 C 599 437.493, 589.214 428.193, 525.750 370.292 C 485.462 333.536, 398.763 254.422, 333.084 194.482 C 267.406 134.542, 212.306 84.487, 210.640 83.250 C 207.116 80.632, 207.251 80.652, 204 82.288',\n\t\t\t\t'stroke': 'none',\n\t\t\t\t'fill': '#BEBEBD',\n\t\t\t\t'fill-rule': 'evenodd'\n\t\t\t}\n\t\t})\n\t])\n};\n\nexport const cookie = (): VNode => {\n\treturn h(\n\t\t\"svg#cookie-svg\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"920\",\n\t\t\t\theight: \"122\",\n\t\t\t\tviewBox: \"0 0 920 512\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 437.075 1.037 C 349.589 9.502, 273.062 61.012, 232.868 138.487 C 194.548 212.352, 194.573 299.188, 232.936 373.567 C 283.929 472.434, 394.427 527.260, 504 508.061 C 572.826 496.001, 633.963 455.948, 673.293 397.150 C 682.044 384.067, 695.118 358.396, 700.419 343.885 C 712.447 310.962, 717.893 271.236, 715.055 237.116 C 712.236 203.211, 709.034 196.500, 695.677 196.500 C 688.113 196.500, 685.271 198.293, 680.864 205.844 C 676.810 212.792, 672.174 217.349, 665.717 220.736 C 661.222 223.094, 659.324 223.472, 652 223.472 C 644.727 223.472, 642.778 223.089, 638.500 220.820 C 631.398 217.053, 625.759 210.709, 621.548 201.746 C 618.442 195.136, 617.292 193.680, 613.748 191.872 C 610.063 189.991, 608.792 189.850, 602.546 190.625 C 598.671 191.106, 591 191.457, 585.500 191.405 C 569.066 191.248, 555.393 185.307, 543.043 172.957 C 535.446 165.361, 530.900 158.120, 527.269 147.835 C 525.146 141.818, 524.667 138.613, 524.606 130 C 524.564 124.225, 524.918 116.555, 525.391 112.956 C 526.142 107.239, 525.986 105.893, 524.157 102.307 C 522.377 98.819, 520.806 97.586, 513.690 94.093 C 504.215 89.443, 498.997 84.769, 495.164 77.500 C 492.915 73.234, 492.528 71.253, 492.528 64 C 492.528 56.687, 492.908 54.776, 495.249 50.313 C 498.508 44.100, 503.575 38.984, 510.439 34.974 C 517.702 30.731, 519.500 27.824, 519.500 20.323 C 519.500 9.193, 514.823 5.621, 496.666 2.885 C 482.280 0.718, 450.545 -0.267, 437.075 1.037 M 437.500 33.130 C 396.335 37.062, 354.315 54.182, 320.579 80.766 C 311.423 87.981, 291.929 107.489, 284.662 116.710 C 243.574 168.839, 227.527 235.860, 240.608 300.699 C 256.785 380.884, 317.810 447.570, 396 470.506 C 419.780 477.482, 433.799 479.439, 460 479.439 C 486.201 479.439, 500.220 477.482, 524 470.506 C 610.820 445.039, 674.636 367.165, 682.985 276.500 C 684.232 262.961, 684.303 248, 683.121 248 C 682.637 248, 679.748 249.142, 676.699 250.537 C 659.757 258.294, 637.910 257.175, 621.104 247.690 C 614.475 243.948, 603.085 233.422, 599.436 227.664 L 596.797 223.500 585.648 223.412 C 560.512 223.215, 535.222 211.973, 517.960 193.325 C 501.761 175.825, 492.689 153.329, 492.562 130.350 L 492.500 119.200 488.336 116.562 C 482.774 113.040, 472.035 101.540, 468.599 95.426 C 459.096 78.521, 457.587 58.341, 464.579 41.644 C 469.013 31.052, 469.718 31.982, 457.367 32.135 C 451.390 32.209, 442.450 32.657, 437.500 33.130 M 386.300 97.801 C 372.262 102.817, 364.719 113.302, 364.575 128 C 364.487 136.944, 367.455 144.388, 373.533 150.467 C 385.692 162.625, 406.308 162.625, 418.467 150.467 C 430.585 138.348, 430.585 117.652, 418.467 105.533 C 410.333 97.400, 396.637 94.107, 386.300 97.801 M 322.300 225.801 C 311.437 229.682, 304.515 236.982, 301.339 247.905 C 298.371 258.114, 301.738 270.672, 309.533 278.467 C 321.692 290.625, 342.308 290.625, 354.467 278.467 C 366.585 266.348, 366.585 245.652, 354.467 233.533 C 346.333 225.400, 332.637 222.107, 322.300 225.801 M 469.223 257.661 C 459.030 262.685, 456.981 274.981, 465 283 C 471.716 289.716, 480.759 289.682, 487.194 282.916 C 499.410 270.076, 485.031 249.869, 469.223 257.661 M 597.180 321.682 C 586.474 326.958, 585.074 341.378, 594.566 348.618 C 597.718 351.022, 599.298 351.500, 604.099 351.500 C 613.686 351.500, 619.500 345.686, 619.500 336.099 C 619.500 331.298, 619.022 329.718, 616.618 326.566 C 611.827 320.284, 604.004 318.319, 597.180 321.682 M 373.450 353.351 C 363.821 357.720, 361.100 370.488, 368.099 378.460 C 379.904 391.905, 401.523 378.153, 394.606 361.600 C 391.512 354.195, 380.798 350.018, 373.450 353.351 M 482.300 353.801 C 471.437 357.682, 464.515 364.982, 461.339 375.905 C 458.371 386.114, 461.738 398.672, 469.533 406.467 C 481.692 418.625, 502.308 418.625, 514.467 406.467 C 526.625 394.308, 526.625 373.692, 514.467 361.533 C 506.333 353.400, 492.637 350.107, 482.300 353.801\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#BEBEBD\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t]\n\t);\n};\n\nexport const lightning = (): VNode => {\n\treturn h(\n\t\t\"svg.shop-svg.lightning\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"799\",\n\t\t\t\theight: \"800\",\n\t\t\t\tviewBox: \"0 0 799 800\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 303.619 82.750 C 303.335 83.713, 300.134 102.275, 296.506 124 C 292.878 145.725, 285.893 187.350, 280.984 216.500 C 263.848 318.256, 242 448.515, 241.751 450.413 C 241.507 452.274, 242.890 452.329, 292.500 452.447 C 320.550 452.513, 343.662 452.897, 343.861 453.300 C 344.330 454.252, 344.498 453.139, 332.886 526 C 307.401 685.902, 302.948 713.583, 302.521 714.750 C 300.923 719.111, 305.828 712.307, 323.852 685.157 C 335.046 668.296, 392.083 582.850, 450.602 495.278 C 509.121 407.706, 557 335.819, 557 335.528 C 557 335.238, 528.650 335, 494 335 C 459.350 335, 431 334.725, 431 334.389 C 431 333.929, 512.142 156.502, 542.879 89.750 L 546.908 81 425.522 81 C 310.778 81, 304.107 81.096, 303.619 82.750\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#FFFFFF\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t]\n\t);\n};\n\nexport const lab = (): VNode => {\n\treturn h(\n\t\t\"svg.shop-svg\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"200\",\n\t\t\t\theight: \"252\",\n\t\t\t\tviewBox: \"0 0 200 252\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 113.340 11.556 C 113.012 12.411, 113.018 15.111, 113.353 17.556 C 113.935 21.807, 113.851 22, 111.426 22 C 109.325 22, 108.459 22.939, 106.388 27.464 C 104.055 32.560, 103.694 32.889, 101.025 32.355 C 97.420 31.634, 98.883 28.732, 79.628 74.779 C 71.054 95.282, 63.479 113.057, 62.795 114.279 C 62.060 115.590, 61.526 120.390, 61.490 126 C 61.444 133.305, 60.927 136.771, 59.251 141 L 57.073 146.500 59.589 148.580 L 62.105 150.659 60.053 155.867 C 58.924 158.731, 58 161.301, 58 161.579 C 58 162.446, 70.400 167.998, 72.336 167.999 C 73.596 168, 74.847 166.401, 76.323 162.908 C 78.393 158.009, 78.600 157.836, 81.778 158.351 C 85.027 158.879, 85.137 158.771, 88.551 151.694 C 90.460 147.737, 93.030 143.672, 94.261 142.659 C 101.402 136.788, 102.900 134.716, 106.953 125.111 C 109.305 119.537, 111.595 114.750, 112.042 114.474 C 112.489 114.198, 115.100 114.857, 117.844 115.939 C 123.445 118.146, 123.760 117.988, 126.381 111.662 C 127.288 109.475, 128.515 107.997, 129.236 108.227 C 129.931 108.448, 132.620 111.416, 135.212 114.822 C 146.209 129.274, 146.924 149.535, 136.985 165.023 C 132.720 171.670, 127.070 176.389, 118.334 180.602 L 111.169 184.058 71.834 184.667 C 50.200 185.002, 32.282 185.469, 32.017 185.705 C 31.360 186.287, 31.399 197.733, 32.060 198.393 C 32.349 198.683, 43.491 199.050, 56.820 199.210 L 81.053 199.500 80.777 212 L 80.500 224.500 47.821 225 C 16.794 225.475, 15.003 225.604, 12.383 227.562 C 8.168 230.711, 5.843 234.358, 5.663 238.105 L 5.500 241.500 100 241.500 L 194.500 241.500 194.281 237.763 C 194.007 233.069, 191.818 229.680, 187.361 227.050 C 184.050 225.097, 182.355 225, 151.443 225 L 119 225 119 219.134 L 119 213.268 124.992 211.083 C 128.288 209.881, 134.346 206.650, 138.454 203.902 C 166.459 185.172, 176.593 149.837, 162.482 120.124 C 157.535 109.708, 150.940 100.846, 143.690 94.874 C 140.285 92.070, 137.147 89.450, 136.715 89.053 C 136.283 88.655, 136.854 86.174, 137.983 83.539 C 140.407 77.884, 139.838 76.717, 133.283 73.907 L 129.038 72.088 132.366 64.294 C 134.197 60.007, 136.275 54.730, 136.986 52.566 C 138.225 48.790, 138.169 48.546, 135.586 46.487 L 132.895 44.341 134.998 39.006 C 136.896 34.189, 136.950 33.521, 135.551 32.123 C 134.152 30.724, 134.401 30.167, 138.118 26.380 C 140.381 24.074, 141.956 21.737, 141.616 21.188 C 140.871 19.982, 117.484 10, 115.405 10 C 114.598 10, 113.669 10.700, 113.340 11.556 M 118.426 17.120 C 118.083 17.675, 118.092 19.678, 118.447 21.571 C 118.961 24.307, 119.826 25.318, 122.669 26.506 C 124.635 27.328, 127.011 28, 127.948 28 C 129.621 28, 134.744 23.383, 133.921 22.616 C 132.171 20.988, 118.937 16.294, 118.426 17.120 M 110.161 30.547 C 109.522 31.948, 109 33.460, 109 33.908 C 109 34.688, 122.199 41.050, 126.634 42.408 C 128.329 42.927, 128.894 42.559, 129.380 40.623 C 129.716 39.283, 130.239 37.542, 130.541 36.754 C 130.939 35.716, 128.661 34.315, 122.258 31.661 C 117.399 29.648, 112.951 28, 112.373 28 C 111.794 28, 110.799 29.146, 110.161 30.547 M 98.267 42.750 C 95.164 50.123, 67.848 115.364, 67.350 116.593 C 67.106 117.193, 69.515 118.848, 72.703 120.268 C 81.138 124.027, 99.212 131.132, 99.474 130.792 C 100.892 128.944, 109.827 104.442, 109.163 104.221 C 104.791 102.764, 99.110 98.890, 97.258 96.102 C 93.936 91.103, 94.103 83.220, 97.619 79.041 C 101.236 74.743, 105.043 73, 110.815 73 C 114.246 73, 116.512 73.615, 118.320 75.037 L 120.910 77.074 122.456 74.085 C 125.260 68.662, 132 52.678, 132 51.451 C 132 50.350, 103.860 38, 101.351 38 C 100.755 38, 99.367 40.138, 98.267 42.750 M 106.388 77.959 C 99.789 80.692, 97.867 90.021, 102.872 95.026 C 106.859 99.013, 110.149 99.635, 114.737 97.270 C 119.689 94.718, 122.043 88.915, 119.900 84.540 C 117.352 79.335, 110.786 76.137, 106.388 77.959 M 125.923 79.144 C 125.292 80.323, 125.010 83.039, 125.297 85.180 C 126.062 90.883, 124.396 95.536, 120.077 99.761 C 117.974 101.817, 115.690 104.589, 115 105.921 C 113.923 108.001, 114.003 108.529, 115.565 109.671 C 118.127 111.545, 121.666 111.324, 122.313 109.250 C 122.614 108.287, 125.366 101.477, 128.430 94.116 C 131.493 86.754, 134 80.578, 134 80.391 C 134 79.992, 128.340 77, 127.585 77 C 127.302 77, 126.554 77.965, 125.923 79.144 M 132.685 97.534 C 131.758 99.478, 131 101.572, 131 102.187 C 131 102.803, 133.272 105.709, 136.049 108.645 C 145.787 118.942, 150.520 134.382, 148.188 148.250 C 145.501 164.233, 135.766 177.122, 120.889 184.395 L 112.073 188.705 115.089 192.807 C 116.935 195.316, 118.417 198.876, 118.907 201.975 C 119.347 204.761, 119.931 207.265, 120.204 207.538 C 120.477 207.811, 124.480 206.153, 129.100 203.855 C 140.656 198.106, 152.466 186.460, 157.446 175.901 C 164.334 161.298, 165.807 147.383, 162.028 132.609 C 158.933 120.509, 153.804 111.736, 144.276 102.250 C 139.719 97.713, 135.626 94, 135.180 94 C 134.735 94, 133.612 95.590, 132.685 97.534 M 66.414 125.363 C 66.083 126.227, 66.225 128.175, 66.730 129.691 C 67.506 132.019, 69.275 133.099, 78.075 136.624 C 88.842 140.937, 89.900 140.978, 93.302 137.218 C 95.048 135.289, 94.844 135.154, 82.511 130.083 C 75.597 127.240, 69.282 124.662, 68.478 124.353 C 67.667 124.042, 66.749 124.491, 66.414 125.363 M 64.192 140.725 C 63.564 142.773, 63.376 144.754, 63.775 145.126 C 64.174 145.498, 68.507 147.449, 73.404 149.461 C 82.857 153.343, 83.274 153.296, 84.636 148.177 C 84.975 146.899, 84.859 145.475, 84.377 145.013 C 83.725 144.387, 66.297 137, 65.473 137 C 65.398 137, 64.821 138.676, 64.192 140.725 M 65.371 155.654 C 63.762 159.506, 63.981 159.975, 68.238 161.783 C 70.777 162.862, 71.091 162.725, 72.549 159.905 C 74.543 156.050, 74.201 155.124, 70.156 153.424 C 66.889 152.050, 66.874 152.057, 65.371 155.654 M 36.362 190.500 C 36.045 191.325, 36.045 192.675, 36.362 193.500 C 36.850 194.773, 40.412 195, 59.912 195 C 82.520 195, 82.911 194.965, 84.443 192.777 C 85.299 191.555, 86 190.205, 86 189.777 C 86 189.350, 74.961 189, 61.469 189 C 40.585 189, 36.852 189.223, 36.362 190.500 M 92.299 191.900 C 86.315 195.659, 85.653 198.377, 85.848 218.363 C 85.943 228.188, 86.268 236.625, 86.570 237.113 C 86.871 237.601, 93.166 238, 100.559 238 L 114 238 113.994 220.250 C 113.988 199.959, 113.242 196.021, 108.807 192.862 C 104.381 189.711, 96.513 189.253, 92.299 191.900 M 98 196.709 C 92.671 198.669, 91.264 205.020, 95.314 208.826 C 100.994 214.162, 109.237 207.993, 106.379 200.545 C 105.866 199.210, 100.848 195.803, 99.800 196.079 C 99.635 196.122, 98.825 196.406, 98 196.709 M 97.408 202.378 C 96.599 204.487, 97.735 206, 100.129 206 C 101.639 206, 102.060 205.443, 101.820 203.760 C 101.447 201.146, 98.264 200.149, 97.408 202.378 M 16.014 230.744 C 14.097 231.710, 11.974 233.625, 11.297 235 L 10.066 237.500 44.277 237.763 C 63.093 237.908, 79.080 237.799, 79.805 237.521 C 80.655 237.195, 81.011 235.683, 80.811 233.258 L 80.500 229.500 50 229.244 C 22.583 229.013, 19.148 229.165, 16.014 230.744 M 119 233.592 L 119 238.286 154.029 237.781 C 173.294 237.504, 189.359 236.975, 189.727 236.606 C 190.096 236.237, 188.950 234.488, 187.181 232.718 L 183.964 229.500 151.482 229.199 L 119 228.897 119 233.592\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#BEBEBD\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t]\n\t);\n};\n\nexport const mine = (): VNode => {\n\treturn h('svg.shop-svg', {\n\t\tattrs: {\n\t\t\t'width': '360',\n\t\t\t'height': '360',\n\t\t\t'viewBox': '0 0 360 360'\n\t\t}\n\t}, [\n\t\th('path', {\n\t\t\tattrs: {\n\t\t\t\t'd': 'M 204 28.668 C 173.110 33.552, 146.398 45.532, 119.265 66.670 C 112.333 72.070, 110.720 72.921, 109.080 72.043 C 108.008 71.469, 105.432 71, 103.354 71 C 99.827 71, 98.629 71.947, 85.288 85.288 C 71.947 98.629, 71 99.827, 71 103.354 C 71 105.432, 71.469 108.008, 72.043 109.080 C 72.921 110.720, 72.070 112.333, 66.670 119.265 C 52.599 137.327, 41.948 156.482, 35.680 175 C 30.388 190.633, 28.918 198.841, 28.298 216.212 L 27.738 231.924 30.305 233.093 C 31.717 233.737, 33.604 233.982, 34.498 233.639 C 35.392 233.296, 38.316 228.332, 40.995 222.608 C 54.122 194.569, 74.513 164.103, 93.412 144.295 L 99.500 137.915 103.662 139.575 C 107.531 141.117, 108.057 141.118, 111.129 139.586 L 114.433 137.937 211.469 234.969 C 276.031 299.529, 309.179 332, 310.521 332 C 313.188 332, 332 313.156, 332 310.484 C 332 309.191, 298.291 274.793, 234.821 211.321 C 160.380 136.877, 137.883 113.829, 138.676 112.819 C 140.613 110.351, 140.898 106.693, 139.429 103.176 C 137.652 98.923, 137.686 98.879, 152.550 86.050 C 171.767 69.464, 193.564 55.262, 218.808 42.879 C 226.678 39.018, 233.374 35.188, 233.690 34.366 C 234.005 33.545, 233.763 31.776, 233.153 30.436 C 232.056 28.029, 231.893 28.002, 219.271 28.136 C 212.247 28.211, 205.375 28.450, 204 28.668 M 193.500 40.478 C 169.871 46.002, 145.005 58.376, 124.651 74.740 L 117.802 80.246 124.028 86.528 L 130.253 92.809 141.288 82.963 C 155.366 70.401, 172.183 58.118, 189.135 48.016 C 205.545 38.237, 205.734 38.115, 204.500 38.129 C 203.950 38.135, 199 39.192, 193.500 40.478 M 91.999 92.501 L 80.530 104.002 94.001 117.501 L 107.471 130.999 119.237 119.264 L 131.002 107.529 117.765 94.265 C 110.485 86.969, 104.289 81, 103.998 81 C 103.706 81, 98.307 86.176, 91.999 92.501 M 75.552 123.634 C 63.224 139.155, 51.433 159.725, 45.538 176 C 42.846 183.432, 37.733 204.067, 38.416 204.749 C 38.611 204.944, 40.468 202.043, 42.542 198.302 C 53.767 178.063, 68.396 157.508, 83.797 140.335 L 92.825 130.268 86.518 124.018 L 80.212 117.768 75.552 123.634 M 125.482 126.018 L 120.540 131.036 215.018 225.518 C 266.981 277.483, 309.966 320, 310.540 320 C 311.842 320, 320 311.774, 320 310.460 C 320 309.479, 131.940 121, 130.960 121 C 130.666 121, 128.201 123.258, 125.482 126.018',\n\t\t\t\t'stroke': 'none',\n\t\t\t\t'fill': '#BEBEBD',\n\t\t\t\t'fill-rule': 'evenodd'\n\t\t\t}\n\t\t})\n\t])\n};\n\nexport const shipment = (): VNode => {\n\treturn h(\n\t\t\"svg.shop-svg\",\n\t\t{\n\t\t\tattrs: {\n\t\t\t\twidth: \"250\",\n\t\t\t\theight: \"201\",\n\t\t\t\tviewBox: \"0 0 250 201\",\n\t\t\t},\n\t\t},\n\t\t[\n\t\t\th(\"path\", {\n\t\t\t\tattrs: {\n\t\t\t\t\td: \"M 123.454 0.765 C 121.468 2.160, 73.898 88.233, 74.212 89.864 C 74.491 91.315, 77.215 91.530, 98.263 91.768 L 122 92.036 122 101.018 L 122 110 107.065 110 C 98.851 110, 91.019 110.422, 89.661 110.939 C 85.710 112.441, 83.653 115.288, 73.996 132.614 L 64.879 148.972 32.690 149.236 C 2.928 149.480, 0.500 149.631, 0.500 151.232 C 0.500 152.185, 8.521 163.775, 18.325 176.987 L 36.150 201.011 123.304 200.755 L 210.458 200.500 230.651 176 C 241.757 162.525, 250.879 150.961, 250.922 150.302 C 250.981 149.394, 243.042 149.087, 218.250 149.038 C 188.710 148.979, 185.377 148.807, 184.241 147.282 C 183.548 146.353, 179.322 138.958, 174.851 130.849 C 170.379 122.741, 165.405 114.845, 163.797 113.303 L 160.874 110.500 144.437 110.183 L 128 109.865 128 107.453 L 128 105.041 148.206 104.771 L 168.412 104.500 169.289 100.500 C 170.559 94.703, 168.385 72.708, 165.404 61.197 C 160.128 40.825, 149.693 22.556, 135.160 8.250 C 126.945 0.163, 125.566 -0.718, 123.454 0.765 M 128.081 54 L 128.081 96.500 131.017 93.066 C 137.310 85.706, 140 76.276, 140 61.582 C 140 50.106, 137.843 37.310, 133.948 25.686 C 127.913 7.672, 128.080 6.866, 128.081 54 M 101.779 50.259 L 82.058 85.500 101.674 85.772 C 112.463 85.921, 121.456 85.878, 121.658 85.675 C 121.860 85.473, 121.908 69.492, 121.763 50.163 L 121.500 15.018 101.779 50.259 M 139.428 23 C 139.785 24.375, 140.929 28.715, 141.971 32.645 C 148.894 58.764, 146.842 81.736, 136.335 95.750 L 133.898 99 148.949 99 L 164 99 163.994 92.250 C 163.980 75.956, 159.367 56.475, 151.977 41.500 C 146.819 31.048, 138.231 18.387, 139.428 23 M 89.340 118.250 C 87.484 120.328, 72 147.330, 72 148.487 C 72 149.168, 176.515 149.152, 177.196 148.471 C 177.826 147.841, 162.896 120.648, 160.414 117.905 C 158.784 116.103, 156.861 116, 125.019 116 C 91.363 116, 91.348 116.001, 89.340 118.250 M 92 130.500 C 89.746 133.216, 92.526 135, 99.015 135 C 105.108 135, 107.302 133.274, 104.895 130.373 C 103.293 128.443, 93.628 128.538, 92 130.500 M 119.152 129.885 C 118.410 130.355, 117.966 131.586, 118.165 132.620 C 118.475 134.229, 119.460 134.500, 125 134.500 C 130.540 134.500, 131.525 134.229, 131.835 132.620 C 132.326 130.066, 130.354 129.031, 125 129.031 C 122.525 129.031, 119.893 129.415, 119.152 129.885 M 145.011 130.487 C 144.332 131.305, 144.046 132.677, 144.375 133.535 C 144.848 134.767, 146.294 135.033, 151.227 134.798 C 156.419 134.551, 157.541 134.181, 157.838 132.620 C 158.035 131.586, 157.590 130.355, 156.848 129.885 C 154.565 128.438, 146.365 128.855, 145.011 130.487 M 0.079 151.583 C 0.127 152.748, 0.364 152.985, 0.683 152.188 C 0.972 151.466, 0.936 150.603, 0.604 150.271 C 0.272 149.939, 0.036 150.529, 0.079 151.583 M 9.700 155.405 C 10.140 156.178, 16.800 165.374, 24.500 175.841 L 38.500 194.872 123.064 194.936 L 207.628 195 223.564 175.425 C 232.329 164.658, 239.650 155.433, 239.833 154.925 C 240.036 154.362, 194.908 154, 124.534 154 C 25.513 154, 9.016 154.202, 9.700 155.405 M 54.020 161.752 C 44.161 166.705, 43.268 181.294, 52.474 186.984 C 59.525 191.342, 70.053 188.624, 73.394 181.583 C 78.095 171.675, 71.121 160.003, 60.500 160.003 C 58.850 160.003, 55.934 160.790, 54.020 161.752 M 97.020 161.752 C 89.637 165.461, 86.568 175.791, 90.898 182.359 C 97.039 191.674, 111.819 191.224, 116.394 181.583 C 121.095 171.675, 114.121 160.003, 103.500 160.003 C 101.850 160.003, 98.934 160.790, 97.020 161.752 M 140.500 161.412 C 135.266 163.738, 132.713 167.413, 132.223 173.329 C 131.412 183.108, 136.836 188.989, 146.673 188.996 C 150.799 188.999, 152.477 188.469, 154.959 186.381 C 159.538 182.528, 161.313 178.473, 160.721 173.220 C 159.589 163.170, 149.629 157.354, 140.500 161.412 M 183.450 161.407 C 181.773 162.137, 179.186 164.179, 177.700 165.944 C 175.526 168.528, 175.001 170.162, 175.004 174.327 C 175.011 183.724, 180.357 189, 189.874 189 C 198.366 189, 204.688 181.796, 203.721 173.220 C 202.587 163.156, 192.684 157.385, 183.450 161.407 M 54.455 168.455 C 50.575 172.335, 50.813 177.300, 55.069 181.250 C 58.625 184.551, 61.790 184.740, 65.440 181.869 C 69.319 178.817, 70.288 175.626, 68.578 171.533 C 66.081 165.555, 58.916 163.994, 54.455 168.455 M 98.750 167.080 C 96.079 168.636, 93.870 173.633, 94.588 176.494 C 95.399 179.725, 100.475 184, 103.500 184 C 104.791 184, 107.231 182.835, 108.923 181.411 C 115.086 176.225, 111.663 165.958, 103.795 166.030 C 101.983 166.047, 99.712 166.519, 98.750 167.080 M 141.159 167.601 C 135.953 171.247, 136.444 179.627, 142.034 182.517 C 146.110 184.625, 148.409 184.368, 151.923 181.411 C 160.485 174.207, 150.329 161.178, 141.159 167.601 M 183.747 167.984 C 178.719 171.939, 179.492 179.652, 185.214 182.611 C 191.168 185.690, 198 181.259, 198 174.320 C 198 167.206, 189.525 163.439, 183.747 167.984\",\n\t\t\t\t\tstroke: \"none\",\n\t\t\t\t\tfill: \"#BEBEBD\",\n\t\t\t\t\t\"fill-rule\": \"evenodd\",\n\t\t\t\t},\n\t\t\t}),\n\t\t\t// h('path', {\n\t\t\t// \tattrs: {\n\t\t\t// \t\t'd': 'M -0 74.750 L -0.001 149.500 32.446 149.223 L 64.894 148.947 74.004 132.601 C 83.653 115.288, 85.711 112.441, 89.661 110.939 C 91.019 110.422, 98.851 110, 107.065 110 L 122 110 122 101.018 L 122 92.036 98.263 91.768 C 77.215 91.530, 74.491 91.315, 74.212 89.864 C 73.898 88.233, 121.468 2.160, 123.454 0.765 C 124.029 0.361, 96.487 0.024, 62.250 0.015 L 0 0 -0 74.750 M 135.160 8.250 C 149.693 22.556, 160.128 40.825, 165.404 61.197 C 168.385 72.708, 170.559 94.703, 169.289 100.500 L 168.412 104.500 148.206 104.771 L 128 105.041 128 107.453 L 128 109.865 144.483 110.183 L 160.967 110.500 163.934 113.500 C 165.566 115.150, 170.906 123.700, 175.801 132.500 L 184.701 148.500 217.351 149 L 250.001 149.500 250.001 74.750 L 250 0 188.389 -0 L 126.779 -0 135.160 8.250 M 128.081 54 L 128.081 96.500 131.017 93.066 C 137.310 85.706, 140 76.276, 140 61.582 C 140 50.106, 137.843 37.310, 133.948 25.686 C 127.913 7.672, 128.080 6.866, 128.081 54 M 101.779 50.259 L 82.058 85.500 101.674 85.772 C 112.463 85.921, 121.456 85.878, 121.658 85.675 C 121.860 85.473, 121.908 69.492, 121.763 50.163 L 121.500 15.018 101.779 50.259 M 139.428 23 C 139.785 24.375, 140.929 28.715, 141.971 32.645 C 148.894 58.764, 146.842 81.736, 136.335 95.750 L 133.898 99 148.949 99 L 164 99 163.994 92.250 C 163.980 75.956, 159.367 56.475, 151.977 41.500 C 146.819 31.048, 138.231 18.387, 139.428 23 M 89.340 118.250 C 87.484 120.328, 72 147.330, 72 148.487 C 72 149.168, 176.515 149.152, 177.196 148.471 C 177.826 147.841, 162.896 120.648, 160.414 117.905 C 158.784 116.103, 156.861 116, 125.019 116 C 91.363 116, 91.348 116.001, 89.340 118.250 M 92 130.500 C 89.746 133.216, 92.526 135, 99.015 135 C 105.108 135, 107.302 133.274, 104.895 130.373 C 103.293 128.443, 93.628 128.538, 92 130.500 M 119.152 129.885 C 118.410 130.355, 117.966 131.586, 118.165 132.620 C 118.475 134.229, 119.460 134.500, 125 134.500 C 130.540 134.500, 131.525 134.229, 131.835 132.620 C 132.326 130.066, 130.354 129.031, 125 129.031 C 122.525 129.031, 119.893 129.415, 119.152 129.885 M 145.011 130.487 C 144.332 131.305, 144.046 132.677, 144.375 133.535 C 144.848 134.767, 146.294 135.033, 151.227 134.798 C 156.419 134.551, 157.541 134.181, 157.838 132.620 C 158.035 131.586, 157.590 130.355, 156.848 129.885 C 154.565 128.438, 146.365 128.855, 145.011 130.487 M 0 176.800 L 0 201 18.122 201 C 32.485 201, 36.038 200.741, 35.248 199.750 C 34.700 199.063, 26.932 188.600, 17.986 176.500 C 9.040 164.400, 1.334 154.072, 0.861 153.550 C 0.377 153.017, 0 163.211, 0 176.800 M 229.686 177 L 210.077 201 230.039 201 L 250 201 250 177 C 250 163.800, 249.841 153, 249.647 153 C 249.453 153, 240.471 163.800, 229.686 177 M 9.700 155.405 C 10.140 156.178, 16.800 165.374, 24.500 175.841 L 38.500 194.872 123.064 194.936 L 207.628 195 223.564 175.425 C 232.329 164.658, 239.650 155.433, 239.833 154.925 C 240.036 154.362, 194.908 154, 124.534 154 C 25.513 154, 9.016 154.202, 9.700 155.405 M 54.020 161.752 C 44.161 166.705, 43.268 181.294, 52.474 186.984 C 59.525 191.342, 70.053 188.624, 73.394 181.583 C 78.095 171.675, 71.121 160.003, 60.500 160.003 C 58.850 160.003, 55.934 160.790, 54.020 161.752 M 97.020 161.752 C 89.637 165.461, 86.568 175.791, 90.898 182.359 C 97.039 191.674, 111.819 191.224, 116.394 181.583 C 121.095 171.675, 114.121 160.003, 103.500 160.003 C 101.850 160.003, 98.934 160.790, 97.020 161.752 M 140.500 161.412 C 135.266 163.738, 132.713 167.413, 132.223 173.329 C 131.412 183.108, 136.836 188.989, 146.673 188.996 C 150.799 188.999, 152.477 188.469, 154.959 186.381 C 159.538 182.528, 161.313 178.473, 160.721 173.220 C 159.589 163.170, 149.629 157.354, 140.500 161.412 M 183.450 161.407 C 181.773 162.137, 179.186 164.179, 177.700 165.944 C 175.526 168.528, 175.001 170.162, 175.004 174.327 C 175.011 183.724, 180.357 189, 189.874 189 C 198.366 189, 204.688 181.796, 203.721 173.220 C 202.587 163.156, 192.684 157.385, 183.450 161.407 M 54.455 168.455 C 50.575 172.335, 50.813 177.300, 55.069 181.250 C 58.625 184.551, 61.790 184.740, 65.440 181.869 C 69.319 178.817, 70.288 175.626, 68.578 171.533 C 66.081 165.555, 58.916 163.994, 54.455 168.455 M 98.750 167.080 C 96.079 168.636, 93.870 173.633, 94.588 176.494 C 95.399 179.725, 100.475 184, 103.500 184 C 104.791 184, 107.231 182.835, 108.923 181.411 C 115.086 176.225, 111.663 165.958, 103.795 166.030 C 101.983 166.047, 99.712 166.519, 98.750 167.080 M 141.159 167.601 C 135.953 171.247, 136.444 179.627, 142.034 182.517 C 146.110 184.625, 148.409 184.368, 151.923 181.411 C 160.485 174.207, 150.329 161.178, 141.159 167.601 M 183.747 167.984 C 178.719 171.939, 179.492 179.652, 185.214 182.611 C 191.168 185.690, 198 181.259, 198 174.320 C 198 167.206, 189.525 163.439, 183.747 167.984',\n\t\t\t// \t\t'stroke': 'none',\n\t\t\t// \t\t'fill': '#fafafa',\n\t\t\t// \t\t'fill-rule': 'evenodd'\n\t\t\t// \t}\n\t\t\t// })\n\t\t]\n\t);\n};\n\nexport const svgs: { [key: string]: VNode } = {\n\tFactory: factory(),\n\tCursor: cursor(),\n\tBaker: baker(),\n\tCookie: cookie(),\n\tLightning: lightning(),\n\tLab: lab(),\n\tMine: mine(),\n\tShipment: shipment(),\n};\n","import { VNode, h } from \"snabbdom\";\nimport CookieCtrl from \"./ctrl\";\nimport { baker, cursor, factory, lab, lightning, svgs } from \"./svg\";\n\nconst cookieCount = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"div#cookie_tally\", [h(\"div#cookie_count\", Math.round(ctrl.cookieCount).toLocaleString())]);\n};\n\nconst cps = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"h4#cps\", ctrl.cookiesPerSecond() + \" per second\");\n};\n\nconst clicker = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"div#clicker\", { on: { click: () => ctrl.clickCookie() } }, [\n\t\tsvgs[\"Cookie\"],\n\t]);\n};\n\n//TODO refactor mapping resources? remove duplicate code\n\nconst buyResources = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"div#shop\", [\n\t\th(\"h2#shop_title.section_title\", \"SHOP\"),\n\t\th(\"div#shop-items.panel\", [\n\t\t\t...Object.entries(ctrl.resources).map(([rsc, inv]) => {\n\t\t\t\tconst pwrup = inv.powerup;\n\t\t\t\treturn h(\n\t\t\t\t\t\"div.shop_item\",\n\t\t\t\t\t{\n\t\t\t\t\t\tclass: {\n\t\t\t\t\t\t\tidle: pwrup.status == \"Idle\",\n\t\t\t\t\t\t\tactive: pwrup.status == \"Active\",\n\t\t\t\t\t\t\tcooldown: pwrup.status == \"Cooldown\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\th(\n\t\t\t\t\t\t\t\"div.buy-resource\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ton: { click: () => ctrl.buyResource(rsc) },\n\t\t\t\t\t\t\t\tclass: {\n\t\t\t\t\t\t\t\t\tunaffordable: !ctrl.canAfford(rsc),\n\t\t\t\t\t\t\t\t\taffordable: ctrl.canAfford(rsc),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\th(\"div.shop_item_label\", [\n\t\t\t\t\t\t\t\t\th(\"h2.item-name\", rsc),\n\t\t\t\t\t\t\t\t\th(\"h3.item-cost\", inv.price.toLocaleString()),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t),\n\t\t\t\t\t\th(\n\t\t\t\t\t\t\t\"div.buy-powerup\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tclass: {\n\t\t\t\t\t\t\t\t\tunaffordable: !ctrl.canAffordPowerup(rsc),\n\t\t\t\t\t\t\t\t\taffordable: ctrl.canAffordPowerup(rsc),\n\t\t\t\t\t\t\t\t\tidle: pwrup.status == \"Idle\",\n\t\t\t\t\t\t\t\t\tactive: pwrup.status == \"Active\",\n\t\t\t\t\t\t\t\t\tcooldown: pwrup.status == \"Cooldown\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ton: { click: () => ctrl.buyPowerup(rsc) },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[lightning(), h(\"h3.powerup-price\", pwrup.price.toLocaleString())]\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}),\n\t\t]),\n\t]);\n};\n\nconst countUp = (ctrl: CookieCtrl) => {\n\treturn h(\"div#clock\", \"Playtime \" + ctrl.getFormattedTime());\n};\n\nconst inventory = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"inventory\", [\n\t\th(\"h2.inventory_label.section_title\", \"INVENTORY\"),\n\t\th(\n\t\t\t\"div#entries.panel\",\n\t\t\tObject.entries(ctrl.resources).map(([rsc, inv]) => {\n\t\t\t\treturn h(\"div.entry\", [\n\t\t\t\t\tsvgs[rsc],\n\t\t\t\t\th(\"h2.item-name\", rsc),\n\t\t\t\t\th(\"h2.item-count\", inv.count ? \"x\" + inv.count : inv.count),\n\t\t\t\t]);\n\t\t\t})\n\t\t),\n\t]);\n};\n\nconst view = (ctrl: CookieCtrl): VNode => {\n\treturn h(\"div#game\", [\n\t\th(\"div#top\", [\n\t\t\th(\"div#cookie-wrap\", [\n\t\t\t\th(\"h2.section_title\", \"COOKIES\"),\n\t\t\t\th(\"div.cookie-info.panel\", [\n\t\t\t\t\tclicker(ctrl),\n\t\t\t\t\tcookieCount(ctrl),\n\t\t\t\t\tcps(ctrl),\n\t\t\t\t\tcountUp(ctrl),\n\t\t\t\t]),\n\t\t\t]),\n\t\t\tbuyResources(ctrl),\n\t\t]),\n\t\tinventory(ctrl),\n\t]);\n};\n\nexport default view;\n","import CookieCtrl from './ctrl'\nimport view from './view';\n\nimport {\n    init,\n    eventListenersModule,\n    h,\n    propsModule,\n    attributesModule,\n    classModule\n  } from \"snabbdom\";\n  \n  const patch = init([\n    eventListenersModule,\n    propsModule,\n    attributesModule,\n    classModule\n  ]);\n\n\n\nconst ctrl = new CookieCtrl(redraw);\nconst element = document.getElementById(\"main\");\nelement.innerHTML = \"\";\nconst inner = document.createElement(\"div\");\nelement.appendChild(inner);\nlet vnode = patch(inner, view(ctrl));\n\nfunction redraw() {\n    vnode = patch(vnode, view(ctrl));\n}\nctrl.tick();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}